#!/bin/bash
DEBUG=1
DEFAULT_HEIGHT=24
DEFAULT_WIDTH=78
THE_MAC=""

clear

# TODO
# 1) Upgrade to facter4 and replace uninteresting facts with blocklisting
# 2) Block all the following https://gist.github.com/lzap/c33ceb1b3f13101dd0dca7d838d5dc87 plus ruby etc

save() {
  cat >/tmp/fdi_state <<EOF
THE_MAC=$THE_MAC
EOF
}

choice_interface() {
  args=()
  for X in /sys/class/net/*; do
    NAME=$(basename "$X")
    ADDRESS=$(cat "$X/address")
    CARRIER=$(cat "$X/carrier" 2>/dev/null)
    args+=("$ADDRESS")
    if [[ "$CARRIER" == "1" ]]; then
      args+=("$NAME (Link)  ")
    else
      args+=("$NAME   ")
    fi
    if [[ "$ADDRESS" == "$THE_MAC" ]]; then
      args+=("ON")
    else
      args+=("OFF")
    fi
  done
  whiptail --title "Foreman Discovery" --radiolist \
    "Select primary network interface (with the SPACE key):" $DEFAULT_HEIGHT $DEFAULT_WIDTH 16 "${args[@]}"
}

choice_journal() {
  journalctl -e
}

choice_shell() {
  if [[ $DEBUG -eq 1 ]]; then
    exit 0
  else
    /usr/bin/bash -l
  fi
}

discover_and_status() {
  {
    for ((i = 0 ; i <= 100 ; i+=1)); do
      read -rsn1 -t 0.5 KEY
      if [[ -n "$KEY" ]]; then break; fi
      echo $i
    done
  } | whiptail --gauge "Please wait while we are sleeping...\n\nLFKDSJLFKSD\n\nA\nB" 16 50 0
}

CHOICE=$(whiptail --title "Foreman Discovery" --menu "Choose an option:" $DEFAULT_HEIGHT $DEFAULT_WIDTH 16 \
  "Discover" "Perform discovery and show status loop" \
  "Interface" "Select NIC for use" \
  "VLAN" "Set VLAN ID" \
  "DHCP" "Set network from DHCP" \
  "Address" "Set IP address manually" \
  "Route" "Set default route manually" \
  "DNS" "Set DNS manually" \
  "URL" "Set Foreman URL (foreman.url)" \
  "Type" "Set Foreman endpoint (foreman.type)" \
  "Hostname" "Set preferred hostname (foreman_hostname)" \
  "Facts" "Set custom facts" \
  "SSH" "Enable SSH and set root password" \
  "Journal" "Display system journal (scroll to end)" \
  "Shell" "Drop into root shell" \
  "Exit" "Quit this menu and start over" 3>&2 2>&1 1>&3)

case $CHOICE in
  "Interface")
    choice_interface
    save
    ;;
  "Journal")
    choice_journal
    ;;
  "Shell")
    choice_shell
    ;;
esac
